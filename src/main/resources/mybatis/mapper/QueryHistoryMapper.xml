<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smoothsql.mapper.QueryHistoryMapper">

    <!-- 结果映射 -->
    <resultMap id="QueryHistoryResultMap" type="com.smoothsql.entity.QueryHistory">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="naturalQuery" column="natural_query"/>
        <result property="generatedSql" column="generated_sql"/>
        <result property="databaseName" column="database_name"/>
        <result property="status" column="status"/>
        <result property="executionTime" column="execution_time"/>
        <result property="resultCount" column="result_count"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- 插入记录 -->
    <insert id="insert" parameterType="com.smoothsql.entity.QueryHistory" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO query_history (
            user_id, natural_query, generated_sql, database_name, status, 
            execution_time, result_count, created_at
        ) VALUES (
            #{userId}, #{naturalQuery}, #{generatedSql}, #{databaseName}, #{status},
            #{executionTime}, #{resultCount}, #{createdAt}
        )
    </insert>

    <!-- 根据ID查询 -->
    <select id="selectById" parameterType="long" resultMap="QueryHistoryResultMap">
        SELECT * FROM query_history WHERE id = #{id}
    </select>

    <!-- 根据用户ID查询，支持分页 -->
    <select id="selectByUserId" resultMap="QueryHistoryResultMap">
        SELECT * FROM query_history 
        WHERE user_id = #{userId} 
        ORDER BY created_at DESC 
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 统计用户查询数量 -->
    <select id="countByUserId" resultType="int">
        <if test="databaseName != null">
            SELECT COUNT(*) FROM query_history 
            WHERE user_id = #{userId} AND database_name = #{databaseName}
            <if test="status != null">
                AND status = #{status}
            </if>
        </if>
        <if test="databaseName == null">
            SELECT COUNT(*) FROM query_history WHERE user_id = #{userId}
        </if>
    </select>

    <!-- 查询所有记录，支持分页 -->
    <select id="selectAll" resultMap="QueryHistoryResultMap">
        SELECT * FROM query_history 
        ORDER BY created_at DESC 
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 更新记录 -->
    <update id="updateById" parameterType="com.smoothsql.entity.QueryHistory">
        UPDATE query_history 
        SET user_id = #{userId},
            natural_query = #{naturalQuery},
            generated_sql = #{generatedSql},
            database_name = #{databaseName},
            status = #{status},
            execution_time = #{executionTime},
            result_count = #{resultCount},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM query_history WHERE id = #{id}
    </delete>

    <!-- 根据用户ID和日期范围统计数量 -->
    <select id="countByUserIdAndDateRange" resultType="long">
        SELECT COUNT(*) FROM query_history 
        WHERE user_id = #{userId} 
        AND created_at >= #{startDate} 
        AND created_at &lt;= #{endDate}
    </select>

    <!-- 根据用户ID、状态和日期范围统计数量 -->
    <select id="countByUserIdAndStatusAndDateRange" resultType="long">
        SELECT COUNT(*) FROM query_history 
        WHERE user_id = #{userId} 
        AND status = #{status}
        AND created_at >= #{startDate} 
        AND created_at &lt;= #{endDate}
    </select>

    <!-- 根据用户ID和日期范围计算平均执行时间 -->
    <select id="averageExecutionTime" resultType="double">
        SELECT AVG(execution_time) FROM query_history 
        WHERE user_id = #{userId} 
        AND created_at >= #{startDate} 
        AND created_at &lt;= #{endDate}
        AND execution_time IS NOT NULL
    </select>

    <!-- 根据用户ID和日期范围查询 -->
    <select id="selectByUserIdAndDateRange" resultMap="QueryHistoryResultMap">
        SELECT * FROM query_history 
        WHERE user_id = #{userId} 
        AND created_at >= #{startDate} 
        AND created_at &lt;= #{endDate}
        ORDER BY created_at DESC
    </select>

    <!-- 查询最近成功的查询 -->
    <select id="selectRecentSuccessful" resultMap="QueryHistoryResultMap">
        SELECT * FROM query_history 
        WHERE user_id = #{userId} 
        AND database_name = #{databaseName}
        AND status = 'SUCCESS'
        ORDER BY created_at DESC 
        LIMIT #{limit}
    </select>

    <!-- 查询热门查询 -->
    <select id="selectPopularQueries" resultMap="QueryHistoryResultMap">
        SELECT * FROM query_history 
        WHERE database_name = #{databaseName}
        GROUP BY generated_sql 
        ORDER BY COUNT(*) DESC 
        LIMIT #{limit}
    </select>

    <!-- 更新收藏状态 -->
    <update id="updateFavoriteStatus">
        UPDATE query_history 
        SET is_favorite = #{isFavorite}, updated_at = NOW()
        WHERE id = #{id} AND user_id = #{userId}
    </update>

    <!-- 根据ID和用户ID删除 -->
    <delete id="deleteByIdAndUserId">
        DELETE FROM query_history 
        WHERE id = #{id} AND user_id = #{userId}
    </delete>

    <!-- 获取用户最近的查询（仅返回查询内容） -->
    <select id="selectRecentQueriesByUser" resultType="string">
        SELECT DISTINCT natural_query FROM query_history 
        WHERE user_id = #{userId} 
        AND database_name = #{databaseName}
        AND status = 'SUCCESS'
        ORDER BY created_at DESC 
        LIMIT #{limit}
    </select>

</mapper>